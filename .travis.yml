---
sudo: required

env:
  - distribution: ubuntu
    version: 14.04
    init: /sbin/init
    run_opts: ""
    playbook: test.yml
  - distribution: ubuntu
    version: 16.04
    init: /bin/systemd
    run_opts: "--privileged=true"
    playbook: test.yml
  - distribution: ubuntu
    version: 18.04
    init: /bin/systemd
    run_opts: "--privileged=true"
    playbook: test.yml
  - distribution: fedora
    version: 25
    init: /usr/sbin/init
    run_opts: "--privileged=true"
    playbook: test.yml
  - distribution: fedora
    version: 26
    init: /usr/sbin/init
    run_opts: "--privileged=true"
    playbook: test.yml
  - distribution: fedora
    version: 27
    init: /usr/sbin/init
    run_opts: "--privileged=true"
    playbook: test.yml
  - distribution: fedora
    version: 28
    init: /usr/sbin/init
    run_opts: "--privileged=true"
    playbook: test.yml
  - distribution: centos
    version: 6
    init: /sbin/init
    run_opts: "--privileged"
    playbook: test.yml
  - distribution: centos
    version: 7
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged"
    playbook: test.yml

# Specify branches to build
branches:
  only:
    - master
    - develop

services:
  - docker

before_install:
  # Pull container
  - 'sudo docker pull ${distribution}:${version}'
  # Customize container
  - 'sudo docker build --rm=true --file=tests/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible tests'

script:
  # Generate a temporary file to record the container ID
  - container_id=$(mktemp)
  
  # Run container in detached state
  - 'sudo docker run --detach --volume="${PWD}":/etc/ansible/roles/role_under_test ${run_opts} ${distribution}-${version}:ansible "${init}" > "${container_id}"'

  # Ansible syntax check
  - 'sudo docker exec "$(cat ${container_id})" env TERM=xterm env ANSIBLE_FORCE_COLOR=1 ansible-playbook /etc/ansible/roles/role_under_test/tests/${playbook} --syntax-check'

  # Test role
  - 'sudo docker exec "$(cat ${container_id})" env TERM=xterm env ANSIBLE_FORCE_COLOR=1 ansible-playbook /etc/ansible/roles/role_under_test/tests/${playbook}'

  # Test role idempotence
  - >
    sudo docker exec "$(cat ${container_id})" env TERM=xterm env ANSIBLE_FORCE_COLOR=1 ansible-playbook /etc/ansible/roles/role_under_test/tests/${playbook}
    | grep -q 'unreachable=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  # Clean up
  - 'sudo docker rm -f "$(cat ${container_id})"'

notifications:
  webhooks:
    - https://galaxy.ansible.com/api/v1/notifications/
    - https://fathomless-fjord-24024.herokuapp.com/notify
