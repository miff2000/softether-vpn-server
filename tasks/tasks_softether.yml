---
# tasks file for softether-vpn-server

- name: SoftEther | Check vpnserver presence
  stat:
    path: "{{ softether_bin_dir }}/vpnserver"
  ignore_errors: yes
  register: existing_binaries
  tags:
      - softether

- block:
  - name: SoftEther | Define package dependencies (Debian Family)
    set_fact:
      packages:
        - make
        - gcc
        - libssl-dev
    when: not existing_binaries.stat.exists
    tags:
        - softether
  when: ansible_os_family == "Debian"

- block:
  - name: SoftEther | Define package dependencies (RedHat Family)
    set_fact:
      packages:
        - make
        - gcc
        - binutils
        - zlib
        - openssl
        - readline
        - ncurses
        - rsync
        - grep
    when: not existing_binaries.stat.exists
    tags:
        - softether
  when: ansible_os_family == "RedHat"

- name: Add /usr/bin dir to system-wide $PATH | TESTING ONLY.
  copy:
    dest: /etc/profile.d/custom-path.sh
    content: "PATH=$PATH:/usr/bin"
  when: docker_test is defined and docker_test
    
- name: SoftEther | Install package dependencies
  package:
    pkg: "{{ item }}"
  with_items: "{{ packages | default([]) }}"
  become: yes
  when: not existing_binaries.stat.exists
  tags:
    - softether

- name: SoftEther | Ensure 'configs' and 'generated' directories exist
  file:
    path: "{{ softether_bin_dir }}/{{ item }}"
    state: directory
  become: yes
  with_items:
    - configs
    - generated
  when: not existing_binaries.stat.exists
  tags:
    - softether
- block:
  - name: SoftEther | Download distribution
    get_url:
      url: "{{ softether_binary_url }}"
      dest: "{{ binary_build_path }}/softether.tar.gz"
    become: yes
    tags:
      - softether

  - name: SoftEther | Unarchive
    unarchive:
      src: "{{ binary_build_path }}/softether.tar.gz"
      dest: "{{ binary_build_path }}"
      remote_src: yes
    become: yes
    tags:
      - softether

  - name: SoftEther | Clean up downloaded file
    file:
      path: "{{ binary_build_path }}/softether.tar.gz"
      state: absent
    when: option_cleanup_old_files

  - name: SoftEther | Disable gcc's PIE in the Makefile (replace)
    replace:
      path: "{{ binary_build_path }}/vpnserver/Makefile"
      regexp: "^CC=gcc$"
      replace: "CC=gcc -no-pie"
    when: (ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'bionic') or (ansible_distribution == 'Debian' and ansible_distribution_release != 'jessie')

  - name: SoftEther | Make binary from source. 'yes 1' accepts the EULA
    shell: yes 1 | make
    args:
      chdir: "{{ binary_build_path }}/vpnserver"
      creates: /tmp/vpnserver/vpnserver
    tags:
      - softether

  - name: SoftEther | Copy files into place
    copy:
      src: "{{ binary_build_path }}/vpnserver/{{ item }}"
      dest: "{{ softether_bin_dir }}/{{ item }}"
      remote_src: yes
    with_items:
      - vpnserver
      - vpncmd
      - lang.config
      - hamcore.se2

  - name: SoftEther | Set binary permissions (executable)
    file:
      path: "{{ softether_bin_dir }}/{{ item }}"
      mode: 0744
    with_items:
      - vpnserver
      - vpncmd

  - name: SoftEther | Clean up build files
    file:
      path: "{{ binary_build_path }}/vpnserver"
      state: absent
    when: option_cleanup_old_files

  - name: SoftEther | Configure lang.config
    lineinfile:
      dest: "{{ softether_bin_dir }}/lang.config"
      regexp: ^(en|ja|cn)$
      line: "{{ softether_lang }}"
      create: yes
    become: yes
    tags:
      - softether

  - name: SoftEther | Install upstart init script
    template:
      src: "{{ role_path }}/templates/startup/softether.init.j2"
      dest: /etc/init.d/softether
      mode: 0755
    when: init_system == "upstart"
    become: yes
    tags:
      - softether

  - name: SoftEther | Install systemd init script
    template:
      src: "{{ role_path }}/templates/startup/softether.service.j2"
      dest: /etc/systemd/system/softether.service
      mode: 0755
    when: init_system == "systemd"
    become: yes
    tags:
      - softether

  - name: SoftEther | Install openrc init script
    template:
      src: "{{ role_path }}/templates/startup/softether.openrc.j2"
      dest: /etc/init.d/softether
      mode: 0755
    when: init_system == "openrc"
    become: yes
    tags:
      - softether

  - name: SoftEther | Reload systemctl
    systemd:
      daemon_reload: yes
    when: init_system == "systemd"
  when: option_build_new_binaries

- name: SoftEther | Stop SoftEther
  service:
    name: softether
    enabled: yes
    state: stopped
  when: option_reset_softether_config
  become: yes
  tags:
    - softether

- name: SoftEther | Reset VPN server configuration
  file:
    path: "{{ softether_bin_dir }}/vpn_server.config"
    state: absent
  when: option_reset_softether_config
  become: yes
  tags:
    - softether

- name: SoftEther | Set keys in sysctl.conf
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    ignoreerrors: yes
    state: "{{ item.state | default('present') }}"
    reload: "yes"
  with_items: "{{ softether_sysctl_conf_lines | default([]) }}"
  when: option_reset_softether_config
  become: yes
  tags:
    - softether

- name: SoftEther | Start SoftEther
  service:
    name: softether
    enabled: yes
    state: started
  when: option_reset_softether_config
  become: yes
  tags:
    - softether

- name: SoftEther | Template unattended setup (builtin)
  template:
    src: "{{ role_path }}/templates/configs/{{ item }}"
    dest: "{{ softether_bin_dir }}/configs/{{ item }}"
  with_items:
    - create_hub
    - check
  become: yes
  tags:
    - softether
    - config

- name: SoftEther | Check configuration
  shell: ./vpncmd localhost /tools /IN:configs/check
  args:
    chdir: "{{ softether_bin_dir }}"
  become: yes
  tags:
    - softether
    - config

- name: SoftEther | Proceed with setup
  shell: ./vpncmd localhost /server /IN:{{ softether_config_script }}
  args:
    chdir: "{{ softether_bin_dir }}"
  become: yes
  tags:
    - softether

- name: SoftEther | Restart service
  service:
    name: softether
    enabled: yes
    state: started
  become: yes
  tags:
    - softether

- debug: msg="Copy artifacts as scp {{ ansible_ssh_user | default('youruser') }}@{{ ansible_ssh_host | default('yourhost') }}:{{ softether_bin_dir }}/generated/* ."

- name: Download SoftEther Artifacts
  synchronize:
    mode: pull
    src: "{{ softether_bin_dir }}/generated"
    dest: "{{ playbook_dir }}"
  ignore_errors: yes
  become: yes
  when: not option_setup_letsencrypt
  tags:
    - openvpn

- name: SoftEther | Add {{ softether_bin_dir }} to PATH
  lineinfile:
    dest: /etc/profile.d/vpnserver.sh
    state: present
    create: yes
    regexp: '^export PATH'
    line: 'export PATH=$PATH:{{ softether_bin_dir }}'
  become: yes
  when: option_add_to_path
  tags:
    - softether
