---
# tasks file for sa-vpn-softether

- name: SoftEther | Check vpnserver presence
  stat:
    path: "{{ softether_home }}/vpnserver"
  ignore_errors: yes
  register: vpnserver_present
  tags:
      - softether

- block:
  - name: SoftEther | Define package dependencies (Debian Family)
    set_fact:
      packages:
        - make
        - gcc
        - libssl-dev
    when: not vpnserver_present.stat.exists
    tags:
        - softether
  when: ansible_os_family == "Debian"

- block:
  - name: SoftEther | Define package dependencies (RedHat Family)
    set_fact:
      packages:
        - make
        - gcc
        - binutils
        - zlib
        - openssl
        - readline
        - ncurses
        - rsync
    when: not vpnserver_present.stat.exists
    tags:
        - softether
  when: ansible_os_family == "RedHat"

- name: SoftEther | Install package dependencies
  package:
    pkg: "{{ item }}"
  with_items: "{{ packages }}"
  become: yes
  when: not vpnserver_present.stat.exists
  tags:
    - softether

- name: SoftEther | Ensure 'configs' and 'generated' directories exist
  file:
    path: "{{ softether_home }}/{{ item }}"
    state: directory
  become: yes
  with_items:
    - configs
    - generated
  when: not vpnserver_present.stat.exists
  tags:
    - softether

- name: SoftEther | Download distribution
  get_url:
    url: "{{ softether_binary_url }}"
    dest: "{{ binary_build_path }}/softether.tar.gz"
  become: yes
  tags:
    - softether

- name: SoftEther | Unarchive
  unarchive:
    src: "{{ binary_build_path }}/softether.tar.gz"
    dest: "{{ binary_build_path }}"
    remote_src: yes
  when: not vpnserver_present.stat.exists
  become: yes
  tags:
    - softether

- name: SoftEther | Clean up downloaded file
  file:
    path: "{{ binary_build_path }}/softether.tar.gz"
    state: absent
  when: option_cleanup_old_files

- name: SoftEther | Make binary from source. 'yes 1' accepts the EULA
  shell: yes 1 | make
  when: not vpnserver_present.stat.exists
  args:
    chdir: "{{ binary_build_path }}/vpnserver"
  tags:
    - softether

- name: SoftEther | Copy files into place
  copy:
    src: "{{ binary_build_path }}/vpnserver/{{ item }}"
    dest: "{{ softether_home }}/{{ item }}"
    remote_src: yes
  with_items:
    - vpnserver
    - vpncmd
    - lang.config
    - hamcore.se2

- name: SoftEther | Set binary permissions (executable)
  file:
    path: "{{ softether_home }}/{{ item }}"
    mode: 0744
  with_items:
    - vpnserver
    - vpncmd

- name: SoftEther | Clean up build files
  file:
    path: "{{ binary_build_path }}/vpnserver"
    state: absent
  when: option_cleanup_old_files

- name: SoftEther | Configure lang.config
  lineinfile:
    dest: "{{ softether_home }}/lang.config"
    regexp: ^(en|ja|cn)$
    line: "{{ softether_lang }}"
    create: yes
  become: yes
  tags:
    - softether

- name: SoftEther | Install init script
  template:
    src: "{{ role_dir }}/templates/startup/softether.init.j2"
    dest: /etc/init.d/softether
    mode: 0755
  when: upstart_system == "upstart"
  become: yes
  tags:
    - softether

- name: SoftEther | Install init script
  template:
    src: "{{ role_dir }}/templates/startup/softether.service.j2"
    dest: /etc/systemd/system/softether.service
    mode: 0755
  when: upstart_system == "systemd"
  become: yes
  tags:
    - softether

- name: SoftEther | Reload systemctl
  systemd:
    daemon_reload: yes
  when: upstart_system == "systemd"

- name: SoftEther | Stop SoftEther
  service:
    name: softether
    enabled: yes
    state: stopped
  when: option_reset_softether_config
  become: yes
  tags:
    - softether

- name: SoftEther | Reset VPN server configuration
  file:
    path: "{{ softether_home }}/vpn_server.config"
    state: absent
  when: option_reset_softether_config
  become: yes
  tags:
    - softether

- name: SoftEther | Set keys in sysctl.conf
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    ignoreerrors: yes
    state: "{{ item.state | default('present') }}"
    reload: "yes"
  with_items: "{{ softether_sysctl_conf_lines | default() }}"
  when: option_reset_softether_config
  become: yes
  tags:
    - softether

- name: SoftEther | Start SoftEther
  service:
    name: softether
    enabled: yes
    state: started
  when: option_reset_softether_config
  become: yes
  tags:
    - softether

- name: SoftEther | Template unattended setup (builtin)
  template:
    src: "{{ role_dir }}/templates/configs/{{ item }}"
    dest: "{{ softether_home }}/configs/{{ item }}"
  with_items:
    - create_hub
    - check
  become: yes
  tags:
    - softether
    - config

## - name: SoftEther | Check configuration
#   shell: ./vpncmd localhost /tools /IN:configs/check
#   args:
#     chdir: "{{ softether_home }}"
#   become: yes
#   tags:
#     - softether

# - name: SoftEther | Proceed with setup
#   shell: ./vpncmd localhost /server /IN:{{ softether_config_script }}
#   args:
#     chdir: "{{ softether_home }}"
#   become: yes
#   tags:
#     - softether

# - name: SoftEther | Restart service
#   service:
#     name: "vpnserver"
#     enabled: yes
#     state: started
#   become: yes
#   tags:
#     - softether

# - debug: msg="Copy artifacts as scp {{ ansible_ssh_user | default('youruser') }}@{{ ansible_ssh_host | default('yourhost') }}:{{ softether_home }}/generated/* ."

# - name: Download SoftEther Artifacts
#   synchronize:
#     mode: pull
#     src: "{{ softether_home }}/generated"
#     dest: "{{ playbook_dir }}/generated"
#   ignore_errors: yes
#   become: yes
#   tags:
#     - openvpn

# - name: SoftEther | Add {{ softether_home }} to PATH
#   lineinfile:
#     dest: /etc/profile.d/softether.sh
#     state: present
#     create: yes
#     regexp: '^export PATH'
#     line: 'export PATH=$PATH:{{ softether_home }}'
#   become: yes
#   when: option_add_to_path
#   tags:
#     - softether
